<?xml version="1.0" encoding="UTF-8"?>
<ElementList>

  <!--fluid elements-->
  <!--updated lagrangian-->
  <ElementItem n="UpdatedLagrangianSegregatedFluidElement2D" pn="Fluid (V/P updated lagrangian)" ImplementedInFile="updated_lagrangian_segregated_fluid_element.cpp" kratos_module="PfemApplication" MinimumKratosVersion="9000" ProductionReady="ProductionReady" WorkingSpaceDimension="2D" LocalSpaceDimension="2" RequiresLocalAxes="False" LargeDeformation="False,True" help="Updated Lagrangian Velocity Pressure Fluid Element" ElementType="Fluid" Dofs="VELOCITY,PRESSURE" EquationType="Segregated">

    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Triangle" nodes="3" KratosName="UpdatedLagrangianSegregatedFluidElement2D3N"/>
    </TopologyFeatures>
    <!--here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
      <filter field="Type" value="FluidPlaneStrain"/>
      <filter field="Dimension" value="2D"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="PRESSURE"/>
      <NodalCondition n="AXIAL_VELOCITY_TURN_2D"/>
      <NodalCondition n="AXIAL_ACCELERATION_TURN_2D"/>
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
    </outputs>
  </ElementItem>


  <ElementItem n="UpdatedLagrangianSegregatedFluidElement3D" pn="Fluid (V/P updated lagrangian)" ImplementedInFile="updated_lagrangian_segregated_fluid_element.cpp" kratos_module="PfemApplication" MinimumKratosVersion="9000" ProductionReady="ProductionReady" WorkingSpaceDimension="3D" LocalSpaceDimension="3" RequiresLocalAxes="False" LargeDeformation="False,True" help="Updated Lagrangian Velocity Pressure Fluid Element" ElementType="Fluid" Dofs="VELOCITY,PRESSURE" EquationType="Segregated">

    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Tetrahedra" nodes="4" KratosName="UpdatedLagrangianSegregatedFluidElement3D4N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
      <filter field="Type" value="Fluid3D"/>
      <filter field="Dimension" value="3D"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="PRESSURE"/>
      <NodalCondition n="AXIAL_VELOCITY_TURN_3D"/>
      <NodalCondition n="AXIAL_ACCELERATION_TURN_3D"/>      
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
    </outputs>
  </ElementItem>

  <!--solid elements in velocities-->
  <!--updated lagrangian-->
  <ElementItem n="UpdatedLagrangianSegregatedVPElement2D" pn="Solid (V/P updated lagrangian)" ImplementedInFile="updated_lagrangian_segregated_V_P_element.cpp" kratos_module="SolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="ProductionReady" WorkingSpaceDimension="2D" LocalSpaceDimension="2" RequiresLocalAxes="False" LargeDeformation="False,True" help="Updated Lagrangian Velocity Pressure Solid Element" ElementType="Solid" Dofs="VELOCITY,PRESSURE" EquationType="Segregated">

    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Triangle" nodes="3" KratosName="UpdatedLagrangianSegregatedVPElement2D3N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
      <filter field="Type" value="PlaneStrain"/>
      <filter field="Dimension" value="2D"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="PRESSURE"/>
      <NodalCondition n="AXIAL_VELOCITY_TURN_2D"/>
      <NodalCondition n="AXIAL_ACCELERATION_TURN_2D"/>
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
    </outputs>
  </ElementItem>


  <ElementItem n="UpdatedLagrangianSegregatedVPElement3D" pn="Solid (V/P updated lagrangian)" ImplementedInFile="updated_lagrangian_segregated_V_P_element.cpp" kratos_module="SolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="Developer" WorkingSpaceDimension="3D" LocalSpaceDimension="3" RequiresLocalAxes="False" LargeDeformation="False,True" help="Updated Lagrangian Velocity Pressure Solid Element" ElementType="Solid" Dofs="VELOCITY,PRESSURE" EquationType="Segregated">

    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Tetrahedra" nodes="4" KratosName="UpdatedLagrangianSegregatedVPElement3D4N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
      <filter field="Type" value="3D"/>
      <filter field="Dimension" value="3D"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="PRESSURE"/>
      <NodalCondition n="AXIAL_VELOCITY_TURN_3D"/>
      <NodalCondition n="AXIAL_ACCELERATION_TURN_3D"/>
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
    </outputs>
  </ElementItem>

  <!--rigid elements-->
  <!--updated lagrangian-->
  <ElementItem n="SurfaceRigidLagrangianElement2D2N" pn="Rigid Wall" ImplementedInFile="none.cpp" kratos_module="ContactMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="Developer" WorkingSpaceDimension="2D" LocalSpaceDimension="1" RequiresLocalAxes="False" LargeDeformation="False,True" help="To be written by..." ElementType="Rigid" EquationType="Monolithic,Segregated">
    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Line" nodes="2" KratosName="Element2D2N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
      <filter field="n" value="None"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="AXIAL_TURN_2D"/>
      <NodalCondition n="AXIAL_VELOCITY_TURN_2D"/>
      <NodalCondition n="AXIAL_ACCELERATION_TURN_2D"/>
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
    </outputs>
  </ElementItem>
  <ElementItem n="SurfaceRigidLagrangianElement3D3N" pn="Rigid Wall" ImplementedInFile="none.cpp" kratos_module="ContactMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="Developer" WorkingSpaceDimension="3D" LocalSpaceDimension="2" RequiresLocalAxes="False" LargeDeformation="False,True" help="To be written by..." ElementType="Rigid" EquationType="Monolithic,Segregated">
    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Triangle" nodes="3" KratosName="Element3D3N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
      <filter field="n" value="None"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="AXIAL_TURN_3D"/>
      <NodalCondition n="AXIAL_VELOCITY_TURN_3D"/>
      <NodalCondition n="AXIAL_ACCELERATION_TURN_3D"/>
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
    </outputs>
  </ElementItem>
  <ElementItem n="RigidLagrangianElement2D3N" pn="Rigid Body" ImplementedInFile="none.cpp" kratos_module="ContactMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="Developer" WorkingSpaceDimension="2D" LocalSpaceDimension="2" RequiresLocalAxes="False" LargeDeformation="False,True" help="To be written by..." ElementType="Rigid" Dofs="DISPLACEMENT,ROTATION" EquationType="Monolithic">
    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Triangle" nodes="3" KratosName="Element2D3N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
      <filter field="n" value="None"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="AXIAL_TURN_2D"/>
      <NodalCondition n="AXIAL_VELOCITY_TURN_2D"/>
      <NodalCondition n="AXIAL_ACCELERATION_TURN_2D"/>
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
    </outputs>
  </ElementItem>  
  <ElementItem n="RigidLagrangianElement3D4N" pn="Rigid Body" ImplementedInFile="none.cpp" kratos_module="ContactMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="Developer" WorkingSpaceDimension="3D" LocalSpaceDimension="3" RequiresLocalAxes="False" LargeDeformation="False,True" help="To be written by..." ElementType="Rigid" Dofs="DISPLACEMENT,ROTATION" EquationType="Monolithic">
    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Tetrahedra" nodes="4" KratosName="Element3D4N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
      <filter field="n" value="None"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="AXIAL_TURN_3D"/>
      <NodalCondition n="AXIAL_VELOCITY_TURN_3D"/>
      <NodalCondition n="AXIAL_ACCELERATION_TURN_3D"/>
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
    </outputs>
  </ElementItem>
  <ElementItem n="RigidLagrangiansSegregatedVPElement2D3N" pn="Rigid Body" ImplementedInFile="none.cpp" kratos_module="ContactMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="Developer" WorkingSpaceDimension="2D" LocalSpaceDimension="2" RequiresLocalAxes="False" LargeDeformation="False,True" help="To be written by..." ElementType="Rigid" Dofs="VELOCITY,ROTATION" EquationType="Segregated">
    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Triangle" nodes="3" KratosName="Element2D3N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
      <filter field="n" value="None"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="AXIAL_VELOCITY_TURN_2D"/>
      <NodalCondition n="AXIAL_ACCELERATION_TURN_2D"/>
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
    </outputs>
  </ElementItem>  
  <ElementItem n="RigidLagrangianSegregatedVPElement3D4N" pn="Rigid Body" ImplementedInFile="none.cpp" kratos_module="ContactMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="Developer" WorkingSpaceDimension="3D" LocalSpaceDimension="3" RequiresLocalAxes="False" LargeDeformation="False,True" help="To be written by..." ElementType="Rigid" Dofs="VELOCITY,ROTATION" EquationType="Segregated">
    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Tetrahedra" nodes="4" KratosName="Element3D4N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
      <filter field="n" value="None"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="AXIAL_VELOCITY_TURN_3D"/>
      <NodalCondition n="AXIAL_ACCELERATION_TURN_3D"/>
    </NodalConditions>
    <inputs>
    </inputs>
    <outputs>
    </outputs>
  </ElementItem>
  <!--solid elements in displacements-->
  <!--updated lagrangian-->
  <ElementItem n="UpdatedLagrangianElement2D" pn="Solid (updated lagrangian)" ImplementedInFile="updated_lagrangian_element.cpp" kratos_module="SolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="ProductionReady" WorkingSpaceDimension="2D" LocalSpaceDimension="2" RequiresLocalAxes="False" LargeDeformation="True" ElementType="Solid" help="This element it implements a Updated Lagrangian approach to large deformation kinematics" Dofs="DISPLACEMENT" EquationType="Monolithic">

    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Triangle" nodes="3" KratosName="UpdatedLagrangianElement2D3N"/>
      <item GeometryType="Triangle" nodes="6" KratosName="UpdatedLagrangianElement2D6N"/>
      <item GeometryType="Quadrilateral" nodes="4" KratosName="UpdatedLagrangianElement2D4N"/>
      <item GeometryType="Quadrilateral" nodes="8" KratosName="UpdatedLagrangianElement2D8N"/>
      <item GeometryType="Quadrilateral" nodes="9" KratosName="UpdatedLagrangianElement2D9N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
      <filter field="Type" value="PlaneStress,PlaneStrain"/>
      <filter field="Dimension" value="2D"/>
      <filter field="LargeDeformation" value="True"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="AXIAL_TURN_2D"/>
      <NodalCondition n="AXIAL_VELOCITY_TURN_2D"/>
      <NodalCondition n="AXIAL_ACCELERATION_TURN_2D"/>
    </NodalConditions>
    <inputs></inputs>
    <outputs>
      <parameter n="GREEN_LAGRANGE_STRAIN_TENSOR" pn="Green-Lagrange strain tensor" v="true" />
      <parameter n="CAUCHY_STRESS_TENSOR" pn="Cauchy stress tensor" v="true" />
      <parameter n="VON_MISES_STRESS" pn="Von Mises stress value" v="true" />
      <parameter n="ALMANSI_STRAIN_TENSOR" pn="Almansi Strain Tensor" v="false" state="hidden" />
      <parameter n="PK2_STRESS_TENSOR" pn="PK2 Stress Tensor" v="false" state="hidden"/>
    </outputs>
  </ElementItem>
  <ElementItem n="UpdatedLagrangianElementAxisym" pn="Solid (updated lagrangian)" ImplementedInFile="axisym_updated_lagrangian_element.cpp" kratos_module="SolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="ProductionReady" WorkingSpaceDimension="2Da" LocalSpaceDimension="2" RequiresLocalAxes="False" LargeDeformation="True" ElementType="Solid" help="This element it implements a Updated Lagrangian approach to large deformation kinematics" Dofs="DISPLACEMENT" EquationType="Monolithic">

    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Triangle" nodes="3" KratosName="AxisymUpdatedLagrangianElement2D3N"/>
      <item GeometryType="Triangle" nodes="6" KratosName="AxisymUpdatedLagrangianElement2D6N"/>
      <item GeometryType="Quadrilateral" nodes="4" KratosName="AxisymUpdatedLagrangianElement2D4N"/>
      <item GeometryType="Quadrilateral" nodes="8" KratosName="AxisymUpdatedLagrangianElement2D8N"/>
      <item GeometryType="Quadrilateral" nodes="9" KratosName="AxisymUpdatedLagrangianElement2D9N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
      <filter field="Type" value="Axisymmetric"/>
      <filter field="Dimension" value="2Da"/>
      <filter field="LargeDeformation" value="True"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
    </NodalConditions>
    <inputs></inputs>
    <outputs>
      <parameter n="GREEN_LAGRANGE_STRAIN_TENSOR" pn="Green-Lagrange strain tensor" v="true" />
      <parameter n="CAUCHY_STRESS_TENSOR" pn="Cauchy stress tensor" v="true" />
      <parameter n="VON_MISES_STRESS" pn="Von Mises stress value" v="true" />
      <parameter n="ALMANSI_STRAIN_TENSOR" pn="Almansi Strain Tensor" v="false" state="hidden" />
      <parameter n="PK2_STRESS_TENSOR" pn="PK2 Stress Tensor" v="false" state="hidden"/>
    </outputs>
  </ElementItem>
  <ElementItem n="UpdatedLagrangianElement3D" pn="Solid (updated lagrangian)" ImplementedInFile="updated_lagrangian_element.cpp" kratos_module="SolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="ProductionReady" WorkingSpaceDimension="3D" LocalSpaceDimension="3" RequiresLocalAxes="False" LargeDeformation="True" ElementType="Solid" help="This element it implements a Updated Lagrangian approach to large deformation kinematics" Dofs="DISPLACEMENT" EquationType="Monolithic">

    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Tetrahedra" nodes="4" KratosName="UpdatedLagrangianElement3D4N"/>
      <item GeometryType="Tetrahedra" nodes="10" KratosName="UpdatedLagrangianElement3D10N"/>
      <item GeometryType="Hexahedra" nodes="8" KratosName="UpdatedLagrangianElement3D8N"/>
      <item GeometryType="Hexahedra" nodes="20" KratosName="UpdatedLagrangianElement3D20N"/>
      <item GeometryType="Hexahedra" nodes="27" KratosName="UpdatedLagrangianElement3D27N"/>
      <item GeometryType="Prism" nodes="6" KratosName="UpdatedLagrangianElement3D6N"/>
      <item GeometryType="Prism" nodes="15" KratosName="UpdatedLagrangianElement3D15N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
      <filter field="Type" value="3D"/>
      <filter field="Dimension" value="3D"/>
      <filter field="LargeDeformation" value="True"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="AXIAL_TURN_3D"/>
      <NodalCondition n="AXIAL_VELOCITY_TURN_3D"/>
      <NodalCondition n="AXIAL_ACCELERATION_TURN_3D"/>
    </NodalConditions>
    <inputs></inputs>
    <outputs>
      <parameter n="GREEN_LAGRANGE_STRAIN_TENSOR" pn="Green-Lagrange strain tensor" v="true" />
      <parameter n="CAUCHY_STRESS_TENSOR" pn="Cauchy stress tensor" v="true" />
      <parameter n="VON_MISES_STRESS" pn="Von Mises stress value" v="true" />
      <parameter n="ALMANSI_STRAIN_TENSOR" pn="Almansi Strain Tensor" v="false" state="hidden" />
      <parameter n="PK2_STRESS_TENSOR" pn="PK2 Stress Tensor" v="false" state="hidden"/>
    </outputs>
  </ElementItem>
  <ElementItem n="TotalUpdatedLagrangianElement2D" pn="Solid (total lagrangian)" ImplementedInFile="updated_lagrangian_element.cpp" kratos_module="SolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="ProductionReady" WorkingSpaceDimension="2D" LocalSpaceDimension="2" RequiresLocalAxes="False" LargeDeformation="True" ElementType="Solid" help="This element it implements a Updated Lagrangian approach to large deformation kinematics" Dofs="DISPLACEMENT" EquationType="Monolithic">

    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Triangle" nodes="3" KratosName="UpdatedLagrangianElement2D3N"/>
      <item GeometryType="Triangle" nodes="6" KratosName="UpdatedLagrangianElement2D6N"/>
      <item GeometryType="Quadrilateral" nodes="4" KratosName="UpdatedLagrangianElement2D4N"/>
      <item GeometryType="Quadrilateral" nodes="8" KratosName="UpdatedLagrangianElement2D8N"/>
      <item GeometryType="Quadrilateral" nodes="9" KratosName="UpdatedLagrangianElement2D9N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
      <filter field="Type" value="PlaneStress,PlaneStrain"/>
      <filter field="Dimension" value="2D"/>
      <filter field="LargeDeformation" value="True"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="AXIAL_TURN_2D"/>
      <NodalCondition n="AXIAL_VELOCITY_TURN_2D"/>
      <NodalCondition n="AXIAL_ACCELERATION_TURN_2D"/>
    </NodalConditions>
    <inputs></inputs>
    <outputs>
      <parameter n="GREEN_LAGRANGE_STRAIN_TENSOR" pn="Green-Lagrange strain tensor" v="true" />
      <parameter n="CAUCHY_STRESS_TENSOR" pn="Cauchy stress tensor" v="true" />
      <parameter n="VON_MISES_STRESS" pn="Von Mises stress value" v="true" />
      <parameter n="ALMANSI_STRAIN_TENSOR" pn="Almansi Strain Tensor" v="false" state="hidden" />
      <parameter n="PK2_STRESS_TENSOR" pn="PK2 Stress Tensor" v="false" state="hidden"/>
    </outputs>
  </ElementItem>
  <ElementItem n="TotalUpdatedLagrangianElement3D" pn="Solid (total lagrangian)" ImplementedInFile="updated_lagrangian_element.cpp" kratos_module="SolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="ProductionReady" WorkingSpaceDimension="3D" LocalSpaceDimension="3" RequiresLocalAxes="False" LargeDeformation="True" ElementType="Solid" help="This element it implements a Updated Lagrangian approach to large deformation kinematics" Dofs="DISPLACEMENT" EquationType="Monolithic">

    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Tetrahedra" nodes="4" KratosName="UpdatedLagrangianElement3D4N"/>
      <item GeometryType="Tetrahedra" nodes="10" KratosName="UpdatedLagrangianElement3D10N"/>
      <item GeometryType="Hexahedra" nodes="8" KratosName="UpdatedLagrangianElement3D8N"/>
      <item GeometryType="Hexahedra" nodes="20" KratosName="UpdatedLagrangianElement3D20N"/>
      <item GeometryType="Hexahedra" nodes="27" KratosName="UpdatedLagrangianElement3D27N"/>
      <item GeometryType="Prism" nodes="6" KratosName="UpdatedLagrangianElement3D6N"/>
      <item GeometryType="Prism" nodes="15" KratosName="UpdatedLagrangianElement3D15N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
      <filter field="Type" value="3D"/>
      <filter field="Dimension" value="3D"/>
      <filter field="LargeDeformation" value="True"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="AXIAL_TURN_3D"/>
      <NodalCondition n="AXIAL_VELOCITY_TURN_3D"/>
      <NodalCondition n="AXIAL_ACCELERATION_TURN_3D"/>
    </NodalConditions>
    <inputs></inputs>
    <outputs>
      <parameter n="GREEN_LAGRANGE_STRAIN_TENSOR" pn="Green-Lagrange strain tensor" v="true" />
      <parameter n="CAUCHY_STRESS_TENSOR" pn="Cauchy stress tensor" v="true" />
      <parameter n="VON_MISES_STRESS" pn="Von Mises stress value" v="true" />
      <parameter n="ALMANSI_STRAIN_TENSOR" pn="Almansi Strain Tensor" v="false" state="hidden" />
      <parameter n="PK2_STRESS_TENSOR" pn="PK2 Stress Tensor" v="false" state="hidden"/>
    </outputs>
  </ElementItem>
  <!--hybrid elements-->
  <!--hybrid updated lagrangian-->
  <ElementItem n="UpdatedLagrangianElementUP2D" pn="Solid (U-P updated lagrangian)" ImplementedInFile="updated_lagrangian_U_P_element.cpp" kratos_module="SolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="ProductionReady" WorkingSpaceDimension="2D" LocalSpaceDimension="2" RequiresLocalAxes="False" LargeDeformation="True" help="This element implements a Hybrid Displacement-Pressure Updated Lagrangian U-P approach to large deformation kinematics" ElementType="Solid" Dofs="DISPLACEMENT,PRESSURE" EquationType="Monolithic">

    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Triangle" nodes="3" KratosName="UpdatedLagrangianUPElement2D3N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
      <filter field="Type" value="PlaneStrain_UP"/>
      <filter field="Dimension" value="2D"/>
      <filter field="LargeDeformation" value="True"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="PRESSURE"/>
      <NodalCondition n="AXIAL_TURN_2D"/>
      <NodalCondition n="AXIAL_VELOCITY_TURN_2D"/>
      <NodalCondition n="AXIAL_ACCELERATION_TURN_2D"/>
    </NodalConditions>
    <inputs>
      <parameter n="STABILIZATION_FACTOR" pn="Stabilization" v="1.0" help="0.1 to 10"/>
    </inputs>
    <outputs>
      <parameter n="GREEN_LAGRANGE_STRAIN_TENSOR" pn="Green-Lagrange strain tensor" v="true" />
      <parameter n="CAUCHY_STRESS_TENSOR" pn="Cauchy stress tensor" v="true" />
      <parameter n="VON_MISES_STRESS" pn="Von Mises stress value" v="true" />
      <parameter n="ALMANSI_STRAIN_TENSOR" pn="Almansi Strain Tensor" v="false" state="hidden" />
      <parameter n="PK2_STRESS_TENSOR" pn="PK2 Stress Tensor" v="false" state="hidden"/>
    </outputs>
  </ElementItem>
  <ElementItem n="UpdatedLagrangianElementUPAxisym" pn="Solid (U-P updated lagrangian)" ImplementedInFile="axisym_updated_lagrangian_U_P_element.cpp" kratos_module="SolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="ProductionReady" WorkingSpaceDimension="2Da" LocalSpaceDimension="2" RequiresLocalAxes="False" LargeDeformation="True" help="This element  implements a Hybrid Displacement-Pressure Updated Lagrangian U-P approach to large deformation kinematics" ElementType="Solid" Dofs="DISPLACEMENT,PRESSURE" EquationType="Monolithic">

    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Triangle" nodes="3" KratosName="AxisymUpdatedLagrangianUPElement2D3N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
      <filter field="Type" value="Axisymmetric_UP"/>
      <filter field="Dimension" value="2Da"/>
      <filter field="LargeDeformation" value="True"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="PRESSURE"/>
    </NodalConditions>
    <inputs>
      <parameter n="STABILIZATION_FACTOR" pn="Stabilization" v="1.0" help="0.1 to 10"/>
    </inputs>
    <outputs>
      <parameter n="GREEN_LAGRANGE_STRAIN_TENSOR" pn="Green-Lagrange strain tensor" v="true" />
      <parameter n="CAUCHY_STRESS_TENSOR" pn="Cauchy stress tensor" v="true" />
      <parameter n="VON_MISES_STRESS" pn="Von Mises stress value" v="true" />
      <parameter n="ALMANSI_STRAIN_TENSOR" pn="Almansi Strain Tensor" v="false" state="hidden" />
      <parameter n="PK2_STRESS_TENSOR" pn="PK2 Stress Tensor" v="false" state="hidden"/>
    </outputs>
  </ElementItem>
  <ElementItem n="UpdatedLagrangianElementUP3D" pn="Solid (U-P updated lagrangian)" ImplementedInFile="updated_lagrangian_element.cpp" kratos_module="SolidMechanicsApplication" MinimumKratosVersion="9000" ProductionReady="ProductionReady" WorkingSpaceDimension="3D" LocalSpaceDimension="3" RequiresLocalAxes="False" LargeDeformation="True" ElementType="Solid" Dofs="DISPLACEMENT,PRESSURE" help="This element it implements a Updated Lagrangian U-P approach to large deformation kinematics">

    <!--here we could add a list of all of the possible geometries-->
    <TopologyFeatures>
      <item GeometryType="Tetrahedra" nodes="4" KratosName="UpdatedLagrangianUPElement3D4N"/>
    </TopologyFeatures>
    <!-- here we add the block of features which we require from the constitutive law-->
    <ConstitutiveLaw_FilterFeatures>
      <filter field="Type" value="3D_UP"/>
      <filter field="Dimension" value="3D"/>
      <filter field="LargeDeformation" value="True"/>
    </ConstitutiveLaw_FilterFeatures>
    <!--define list of NodalConditions-->
    <NodalConditions>
      <NodalCondition n="DISPLACEMENT"/>
      <NodalCondition n="VELOCITY"/>
      <NodalCondition n="ACCELERATION"/>
      <NodalCondition n="AXIAL_TURN_3D"/>
      <NodalCondition n="AXIAL_VELOCITY_TURN_3D"/>
      <NodalCondition n="AXIAL_ACCELERATION_TURN_3D"/>
    </NodalConditions>
    <inputs>
      <parameter n="STABILIZATION_FACTOR" pn="Stabilization" v="1.0" help="0.1 to 10"/>
    </inputs>
    <outputs>
      <parameter n="GREEN_LAGRANGE_STRAIN_TENSOR" pn="Green-Lagrange strain tensor" v="true" />
      <parameter n="CAUCHY_STRESS_TENSOR" pn="Cauchy stress tensor" v="true" />
      <parameter n="VON_MISES_STRESS" pn="Von Mises stress value" v="true" />
      <parameter n="ALMANSI_STRAIN_TENSOR" pn="Almansi Strain Tensor" v="false" state="hidden" />
      <parameter n="PK2_STRESS_TENSOR" pn="PK2 Stress Tensor" v="false" state="hidden"/>
    </outputs>
  </ElementItem>
</ElementList>
